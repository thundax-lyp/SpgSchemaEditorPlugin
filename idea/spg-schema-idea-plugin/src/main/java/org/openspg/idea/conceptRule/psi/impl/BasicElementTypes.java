package org.openspg.idea.conceptRule.psi.impl;

import com.intellij.psi.tree.TokenSet;
import org.openspg.idea.conceptRule.grammar.psi.ConceptRuleTypes;


public interface BasicElementTypes extends ConceptRuleTypes {

    TokenSet BASIC_KEYWORD_BIT_SET = TokenSet.create(
            ABS_KEYWORD, ACCUMULATE_KEYWORD, ACTION_KEYWORD, ADD_EDGE_KEYWORD, ADD_NODE_KEYWORD, ALL_KEYWORD,
            AND_KEYWORD, ASC_KEYWORD, ASTERISK, AS_KEYWORD, AVGIF_KEYWORD, AVG_KEYWORD, CEIL_KEYWORD, COMMENT_KEYWORD,
            CONCATAGGIF_KEYWORD, CONSTRAINT_KEYWORD, COUNTIF_KEYWORD, COUNT_KEYWORD, DEFINE_KEYWORD, DEFINE_PRIORITY_KEYWORD,
            DESCRIPTION_KEYWORD, DESC_KEYWORD, DISTINCT_GET_KEYWORD, EDGES_KEYWORD, EXIST_KEYWORD,
            FLOOR_KEYWORD, GET_KEYWORD, GRAPH_STRUCTURE_KEYWORD, GROUP_KEYWORD, HEAD_KEYWORD, IF_KEYWORD,
            IN_KEYWORD, IS_KEYWORD, LIKE_KEYWORD, LIMIT_KEYWORD, MATCH_KEYWORD,
            MAXIF_KEYWORD, MAX_KEYWORD, MINIF_KEYWORD, MIN_KEYWORD, NODES_KEYWORD, NOT_KEYWORD,
            NOT_LATTER_KEYWORD, OPTIONAL_KEYWORD, OR_KEYWORD, PATH_KEYWORD, PER_NODE_LIMIT_KEYWORD,
            PRIORITY_KEYWORD, REDUCE_KEYWORD, REPEAT_KEYWORD, RETURN_KEYWORD, RLIKE_KEYWORD, RULE_KEYWORD,
            SLICE_KEYWORD, SQL_KEYWORD, STRUCTURE_KEYWORD, STR_JOIN_KEYWORD, SUMIF_KEYWORD, SUM_KEYWORD,
            TAIL_KEYWORD, WHERE_KEYWORD, XOR_KEYWORD
    );

    TokenSet BASIC_LITERAL_BIT_SET = TokenSet.create(TRUE_KEYWORD, FALSE_KEYWORD, NULL_KEYWORD);

    TokenSet BASIC_OPERATION_BIT_SET = TokenSet.create(
            EQ, GT, EXCL, QUEST, COLON, PLUS, MINUS, ASTERISK, DIV, AND, OR, XOR,
            PERC, EQEQ, LE, GE, NE, ANDAND, OROR
    );

    TokenSet BASIC_INTEGER_LITERALS = TokenSet.create(INTEGER_LITERAL);
    TokenSet BASIC_REAL_LITERALS = TokenSet.create(FLOAT_LITERAL);
    TokenSet BASIC_STRING_LITERALS = TokenSet.create(STRING_LITERAL);

}
